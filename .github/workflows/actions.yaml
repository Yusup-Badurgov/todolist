name: Build and deploy action
on:
  push:
    branches: ["master"]

jobs:
  build_and_push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Build and Push Container
        run: |-
          docker build -t yusup26/django-todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
          docker push yusup26/django-todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    needs: build_and_push
    runs-on: ubuntu-20.04
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DEBUG: ${{secrets.DEBUG}}

    steps:
      - name: Clone Code
        uses: actions/checkout@v3.5.2

      - name: Render configs
        run: |-
          mkdir deploy_ci
          cat docker-compose-ci.yaml | envsubst > deploy_ci/docker-compose.yaml
          cat deploy/.env | envsubst > deploy_ci/.env

      # ========= BEGIN SSH EXIT ==========
      - name: Clone files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          # Эти значения надо вписать в секреты гитхаба
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          # Указываем, какие файлы копировать
          source: "deploy_ci/docker-compose.yaml, deploy_ci/.env"
          target: "deploy"
          strip_components: 1

      # ========== START DOCKER CONTAINER ==========
      - name: Executing remote SSH commands using PASSWORD
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |-
            whoami
            cd deploy
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d

      # ========= REMOVING INACTIVE IMAGES ============
      - name: Removing Images
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f