version: '3.8'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"

  api:
    image: yusup26/django-todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
    restart: always
    env_file:
      - ./../deploy/.env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  migrations:
    image: yusup26/django-todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./../deploy/.env
    command:
      sh -c "python ./manage.py migrate"

  db:
    # Использование готового образа postgres
    image: postgres:15.2
    # Задание переменных окружения для контейнера с postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: always
    # Задание имени контейнера для сервиса pgdb
    container_name: pgdb
    # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - db_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 15

volumes:
  db_data:
  todolist: